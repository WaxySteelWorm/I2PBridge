name: Release iOS to TestFlight
on:
  push:
    tags:
      - 'v*'

jobs:
  build-ios:
    runs-on: [self-hosted, macOS]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Ruby environment
        run: |
          ruby --version
          gem --version
          which ruby
          
      - name: Install dependencies
        run: |
          cd ios
          gem install bundler --user-install
          bundle install || (bundle init && bundle install)
          bundle add fastlane
          
      - name: Decode signing assets
        run: |
          echo "$IOS_CERTIFICATE_P12" | base64 --decode > ios/dist_cert.p12
          echo "$IOS_PROVISIONING_PROFILE" | base64 --decode > ios/profile.mobileprovision
        env:
          IOS_CERTIFICATE_P12: ${{ secrets.IOS_CERTIFICATE_P12 }}
          IOS_PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}
          
      - name: Install signing assets
        run: |
          # Kill any processes that might be using the keychain
          pkill -f "SecurityAgent" || true
          pkill -f "securityd" || true
          sleep 2
          
          # Force remove existing keychain files
          security list-keychains -d user | grep -q "build.keychain" && security delete-keychain build.keychain || true
          rm -rf ~/Library/Keychains/build.keychain* || true
          
          # Create fresh keychain
          security create-keychain -p password build.keychain
          security list-keychains -s build.keychain $(security list-keychains -d user | sed s/\"//g)
          security unlock-keychain -p password build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          
          # Import certificate
          security import ios/dist_cert.p12 -k build.keychain -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign -A
          
          # Set partition list to avoid codesign prompts
          security set-key-partition-list -S apple-tool:,apple: -s -k password build.keychain
          
          # Install provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ios/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        env:
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          
      - name: Build IPA and upload to TestFlight
        run: |
          cd ios
          bundle exec fastlane release
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          
      - name: Cleanup keychain
        if: always()
        run: |
          security delete-keychain build.keychain || true
          rm -rf ~/Library/Keychains/build.keychain* || true
