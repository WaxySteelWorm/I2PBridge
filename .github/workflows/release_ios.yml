name: Release iOS to TestFlight
on:
  push:
    tags:
      - 'v*'
jobs:
  build-ios:
    runs-on: [self-hosted, macOS]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Ruby environment
        run: |
          ruby --version
          gem --version
          which ruby
          
      - name: Install dependencies
        run: |
          cd ios
          gem install bundler --user-install
          bundle install || (bundle init && bundle install)
          bundle add fastlane
          
      - name: Decode signing assets
        run: |
          echo "$IOS_CERTIFICATE_P12" | base64 --decode > ios/dist_cert.p12
          echo "$IOS_PROVISIONING_PROFILE" | base64 --decode > ios/profile.mobileprovision
        env:
          IOS_CERTIFICATE_P12: ${{ secrets.IOS_CERTIFICATE_P12 }}
          IOS_PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}
          
      - name: Install signing assets
        run: |
          KEYCHAIN_PATH=$RUNNER_TEMP/build.keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut $KEYCHAIN_PATH  # Prevent locking/timeout
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # Append to keychain search list and set as default
          security list-keychains -d user -s $KEYCHAIN_PATH $(security list-keychains -d user | sed 's/"/ /g' | tr -d '\n')
          security default-keychain -s $KEYCHAIN_PATH
          # Import with password and allowances to avoid interaction prompts
          security import ios/dist_cert.p12 -k $KEYCHAIN_PATH -P "$IOS_CERTIFICATE_PASSWORD" -A -T /usr/bin/codesign -T /usr/bin/productbuild -T /usr/bin/pkgbuild
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ios/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}  # Add this secret in GitHub (e.g., "ci-build")
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          
      - name: Build IPA and upload to TestFlight
        run: |
          cd ios
          bundle exec fastlane release
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          
      # Optional: Clean up keychain after build
      - name: Cleanup keychain
        if: always()  # Run even on failure
        run: |
          KEYCHAIN_PATH=$RUNNER_TEMP/build.keychain
          security delete-keychain $KEYCHAIN_PATH || true
