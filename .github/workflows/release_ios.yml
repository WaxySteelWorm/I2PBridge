name: Release iOS to TestFlight
on:
  push:
    tags:
      - 'v*'

jobs:
  build-ios:
    runs-on: [self-hosted, macOS]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Ruby environment
        run: |
          ruby --version
          gem --version
          which ruby
          
      - name: Install dependencies
        run: |
          cd ios
          gem install bundler --user-install
          bundle install || (bundle init && bundle install)
          bundle add fastlane
          
      - name: Decode signing assets
        run: |
          echo "$IOS_CERTIFICATE_P12" | base64 --decode > ios/dist_cert.p12
          echo "$IOS_PROVISIONING_PROFILE" | base64 --decode > ios/profile.mobileprovision
        env:
          IOS_CERTIFICATE_P12: ${{ secrets.IOS_CERTIFICATE_P12 }}
          IOS_PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}
          
      - name: Install signing assets
        run: |
          # More thorough cleanup - handle both old and new keychain formats
          security delete-keychain build.keychain 2>/dev/null || true
          security delete-keychain build.keychain-db 2>/dev/null || true
          rm -f ~/Library/Keychains/build.keychain* 2>/dev/null || true
          rm -f ~/Library/Keychains/build.keychain-db* 2>/dev/null || true
          
          # Wait a moment for file system
          sleep 1
          
          # Create fresh keychain (use full path to avoid conflicts)
          KEYCHAIN_PATH="$HOME/Library/Keychains/build.keychain"
          security create-keychain -p password "$KEYCHAIN_PATH"
          security unlock-keychain -p password "$KEYCHAIN_PATH"
          security set-keychain-settings -t 3600 -l "$KEYCHAIN_PATH"
          
          # Add to search list (don't make it default)
          security list-keychains -s "$KEYCHAIN_PATH" ~/Library/Keychains/login.keychain-db
          
          # Import certificate with proper flags
          security import ios/dist_cert.p12 -k "$KEYCHAIN_PATH" -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign -T /usr/bin/productbuild -A
          
          # Set partition list to avoid prompts
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k password "$KEYCHAIN_PATH"
          
          # Install provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ios/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        env:
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          
      - name: Build IPA and upload to TestFlight
        run: |
          cd ios
          bundle exec fastlane release
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          
      - name: Cleanup keychain
        if: always()
        run: |
          KEYCHAIN_PATH="$HOME/Library/Keychains/build.keychain"
          security delete-keychain "$KEYCHAIN_PATH" 2>/dev/null || true
          rm -f ~/Library/Keychains/build.keychain* 2>/dev/null || true
